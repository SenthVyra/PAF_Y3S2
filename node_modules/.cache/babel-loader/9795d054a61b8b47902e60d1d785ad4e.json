{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAKTHIMICRO\\\\Desktop\\\\PAF_Y3S2\\\\Comment Management\\\\Comment Management\\\\react-frontend\\\\src\\\\components\\\\CreateCommentComponent.jsx\";\nimport React, { Component } from 'react';\nimport CommentService from '../services/CommentService';\n\nclass CreateCommentComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveOrUpdateComment = e => {\n      e.preventDefault();\n      let comment = {\n        comment: this.state.comment,\n        description: this.state.description,\n        userId: this.state.userId\n      };\n      console.log('comment => ' + JSON.stringify(comment)); // step 5\n\n      if (this.state.id === '_add') {\n        CommentService.createComment(comment).then(res => {\n          this.props.history.push('/comments');\n        });\n      } else {\n        CommentService.updateComment(comment, this.state.id).then(res => {\n          this.props.history.push('/comments');\n        });\n      }\n    };\n\n    this.changeCommentHandler = event => {\n      this.setState({\n        comment: event.target.value\n      });\n    };\n\n    this.changeDescriptionHandler = event => {\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.changeUserHandler = event => {\n      this.setState({\n        userId: event.target.value\n      });\n    };\n\n    this.state = {\n      // step 2\n      id: this.props.match.params.id,\n      comment: '',\n      description: '',\n      userId: ''\n    };\n    this.changeCommentHandler = this.changeCommentHandler.bind(this);\n    this.changeDescriptionHandler = this.changeDescriptionHandler.bind(this);\n    this.saveOrUpdateComment = this.saveOrUpdateComment.bind(this);\n  } // step 3\n\n\n  componentDidMount() {\n    // step 4\n    if (this.state.id === '_add') {\n      return;\n    } else {\n      CommentService.getCommentById(this.state.id).then(res => {\n        let comment = res.data;\n        this.setState({\n          comment: comment.comment,\n          description: comment.description,\n          userId: comment.userId\n        });\n      });\n    }\n  }\n\n  cancel() {\n    this.props.history.push('/comments');\n  }\n\n  getTitle() {\n    if (this.state.id === '_add') {\n      return /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 20\n        }\n      }, \"Add Comment\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 20\n        }\n      }, \"Update Comment\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card col-md-6 offset-md-3 offset-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, this.getTitle(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 45\n      }\n    }, \" Comment: \"), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Comment\",\n      name: \"comment\",\n      className: \"form-control\",\n      value: this.state.comment,\n      onChange: this.changeCommentHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 45\n      }\n    }, \" Description: \"), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Description\",\n      name: \"description\",\n      className: \"form-control\",\n      value: this.state.description,\n      onChange: this.changeDescriptionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 45\n      }\n    }, \" Author: \"), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Author Name\",\n      name: \"userId\",\n      className: \"form-control\",\n      value: this.state.userId,\n      onChange: this.changeUserHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.saveOrUpdateComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 41\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: this.cancel.bind(this),\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 41\n      }\n    }, \"Cancel\")))))));\n  }\n\n}\n\nexport default CreateCommentComponent;","map":{"version":3,"sources":["C:/Users/SAKTHIMICRO/Desktop/PAF_Y3S2/Comment Management/Comment Management/react-frontend/src/components/CreateCommentComponent.jsx"],"names":["React","Component","CommentService","CreateCommentComponent","constructor","props","saveOrUpdateComment","e","preventDefault","comment","state","description","userId","console","log","JSON","stringify","id","createComment","then","res","history","push","updateComment","changeCommentHandler","event","setState","target","value","changeDescriptionHandler","changeUserHandler","match","params","bind","componentDidMount","getCommentById","data","cancel","getTitle","render","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,4BAA3B;;AAEA,MAAMC,sBAAN,SAAqCF,SAArC,CAA+C;AAC3CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA+BnBC,mBA/BmB,GA+BIC,CAAD,IAAO;AACzBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIC,OAAO,GAAG;AAACA,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD,OAArB;AAA8BE,QAAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,WAAtD;AAAmEC,QAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE;AAAtF,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBC,IAAI,CAACC,SAAL,CAAeP,OAAf,CAA5B,EAHyB,CAKzB;;AACA,UAAG,KAAKC,KAAL,CAAWO,EAAX,KAAkB,MAArB,EAA4B;AACxBf,QAAAA,cAAc,CAACgB,aAAf,CAA6BT,OAA7B,EAAsCU,IAAtC,CAA2CC,GAAG,IAAG;AAC7C,eAAKf,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,CAAwB,WAAxB;AACH,SAFD;AAGH,OAJD,MAIK;AACDpB,QAAAA,cAAc,CAACqB,aAAf,CAA6Bd,OAA7B,EAAsC,KAAKC,KAAL,CAAWO,EAAjD,EAAqDE,IAArD,CAA2DC,GAAG,IAAI;AAC9D,eAAKf,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,CAAwB,WAAxB;AACH,SAFD;AAGH;AACJ,KA9CkB;;AAAA,SAgDnBE,oBAhDmB,GAgDIC,KAAD,IAAW;AAC7B,WAAKC,QAAL,CAAc;AAACjB,QAAAA,OAAO,EAAEgB,KAAK,CAACE,MAAN,CAAaC;AAAvB,OAAd;AACH,KAlDkB;;AAAA,SAoDnBC,wBApDmB,GAoDQJ,KAAD,IAAW;AACjC,WAAKC,QAAL,CAAc;AAACf,QAAAA,WAAW,EAAEc,KAAK,CAACE,MAAN,CAAaC;AAA3B,OAAd;AACH,KAtDkB;;AAAA,SAwDnBE,iBAxDmB,GAwDCL,KAAD,IAAW;AAC1B,WAAKC,QAAL,CAAc;AAACd,QAAAA,MAAM,EAAEa,KAAK,CAACE,MAAN,CAAaC;AAAtB,OAAd;AACH,KA1DkB;;AAGf,SAAKlB,KAAL,GAAa;AACT;AACAO,MAAAA,EAAE,EAAE,KAAKZ,KAAL,CAAW0B,KAAX,CAAiBC,MAAjB,CAAwBf,EAFnB;AAGTR,MAAAA,OAAO,EAAE,EAHA;AAITE,MAAAA,WAAW,EAAE,EAJJ;AAKTC,MAAAA,MAAM,EAAE;AALC,KAAb;AAOA,SAAKY,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BS,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKJ,wBAAL,GAAgC,KAAKA,wBAAL,CAA8BI,IAA9B,CAAmC,IAAnC,CAAhC;AACA,SAAK3B,mBAAL,GAA2B,KAAKA,mBAAL,CAAyB2B,IAAzB,CAA8B,IAA9B,CAA3B;AACH,GAd0C,CAgB3C;;;AACAC,EAAAA,iBAAiB,GAAE;AAEf;AACA,QAAG,KAAKxB,KAAL,CAAWO,EAAX,KAAkB,MAArB,EAA4B;AACxB;AACH,KAFD,MAEK;AACDf,MAAAA,cAAc,CAACiC,cAAf,CAA8B,KAAKzB,KAAL,CAAWO,EAAzC,EAA6CE,IAA7C,CAAoDC,GAAD,IAAQ;AACvD,YAAIX,OAAO,GAAGW,GAAG,CAACgB,IAAlB;AACA,aAAKV,QAAL,CAAc;AAACjB,UAAAA,OAAO,EAAEA,OAAO,CAACA,OAAlB;AACVE,UAAAA,WAAW,EAAEF,OAAO,CAACE,WADX;AAEVC,UAAAA,MAAM,EAAGH,OAAO,CAACG;AAFP,SAAd;AAIH,OAND;AAOH;AACJ;;AA8BDyB,EAAAA,MAAM,GAAE;AACJ,SAAKhC,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,CAAwB,WAAxB;AACH;;AAEDgB,EAAAA,QAAQ,GAAE;AACN,QAAG,KAAK5B,KAAL,CAAWO,EAAX,KAAkB,MAArB,EAA4B;AACxB,0BAAO;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACH,KAFD,MAEK;AACD,0BAAO;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACH;AACJ;;AACDsB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEO;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK;AAAK,MAAA,SAAS,EAAG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAG,uCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKD,QAAL,EAFR,eAII;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,MAAA,WAAW,EAAC,SAAnB;AAA6B,MAAA,IAAI,EAAC,SAAlC;AAA4C,MAAA,SAAS,EAAC,cAAtD;AACI,MAAA,KAAK,EAAE,KAAK5B,KAAL,CAAWD,OADtB;AAC+B,MAAA,QAAQ,EAAE,KAAKe,oBAD9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAMI;AAAK,MAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,MAAA,WAAW,EAAC,aAAnB;AAAiC,MAAA,IAAI,EAAC,aAAtC;AAAoD,MAAA,SAAS,EAAC,cAA9D;AACI,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWC,WADtB;AACmC,MAAA,QAAQ,EAAE,KAAKkB,wBADlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CANJ,eAWI;AAAK,MAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAO,MAAA,WAAW,EAAC,aAAnB;AAAiC,MAAA,IAAI,EAAC,QAAtC;AAA+C,MAAA,SAAS,EAAC,cAAzD;AACI,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWE,MADtB;AAC8B,MAAA,QAAQ,EAAE,KAAKkB,iBAD7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAXJ,eAiBI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKxB,mBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAkBI;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAmC,MAAA,OAAO,EAAE,KAAK+B,MAAL,CAAYJ,IAAZ,CAAiB,IAAjB,CAA5C;AAAoE,MAAA,KAAK,EAAE;AAACO,QAAAA,UAAU,EAAE;AAAb,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBJ,CADJ,CAJJ,CADJ,CADL,CAFP,CADJ;AAqCH;;AA9G0C;;AAiH/C,eAAerC,sBAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport CommentService from '../services/CommentService';\r\n\r\nclass CreateCommentComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            // step 2\r\n            id: this.props.match.params.id,\r\n            comment: '',\r\n            description: '',\r\n            userId: ''\r\n        }\r\n        this.changeCommentHandler = this.changeCommentHandler.bind(this);\r\n        this.changeDescriptionHandler = this.changeDescriptionHandler.bind(this);\r\n        this.saveOrUpdateComment = this.saveOrUpdateComment.bind(this);\r\n    }\r\n\r\n    // step 3\r\n    componentDidMount(){\r\n\r\n        // step 4\r\n        if(this.state.id === '_add'){\r\n            return\r\n        }else{\r\n            CommentService.getCommentById(this.state.id).then( (res) =>{\r\n                let comment = res.data;\r\n                this.setState({comment: comment.comment,\r\n                    description: comment.description,\r\n                    userId : comment.userId\r\n                });\r\n            });\r\n        }        \r\n    }\r\n    saveOrUpdateComment = (e) => {\r\n        e.preventDefault();\r\n        let comment = {comment: this.state.comment, description: this.state.description, userId: this.state.userId};\r\n        console.log('comment => ' + JSON.stringify(comment));\r\n\r\n        // step 5\r\n        if(this.state.id === '_add'){\r\n            CommentService.createComment(comment).then(res =>{\r\n                this.props.history.push('/comments');\r\n            });\r\n        }else{\r\n            CommentService.updateComment(comment, this.state.id).then( res => {\r\n                this.props.history.push('/comments');\r\n            });\r\n        }\r\n    }\r\n    \r\n    changeCommentHandler= (event) => {\r\n        this.setState({comment: event.target.value});\r\n    }\r\n\r\n    changeDescriptionHandler= (event) => {\r\n        this.setState({description: event.target.value});\r\n    }\r\n\r\n    changeUserHandler= (event) => {\r\n        this.setState({userId: event.target.value});\r\n    }\r\n\r\n    cancel(){\r\n        this.props.history.push('/comments');\r\n    }\r\n\r\n    getTitle(){\r\n        if(this.state.id === '_add'){\r\n            return <h3 className=\"text-center\">Add Comment</h3>\r\n        }else{\r\n            return <h3 className=\"text-center\">Update Comment</h3>\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                   <div className = \"container\">\r\n                        <div className = \"row\">\r\n                            <div className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n                                {\r\n                                    this.getTitle()\r\n                                }\r\n                                <div className = \"card-body\">\r\n                                    <form>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Comment: </label>\r\n                                            <input placeholder=\"Comment\" name=\"comment\" className=\"form-control\" \r\n                                                value={this.state.comment} onChange={this.changeCommentHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Description: </label>\r\n                                            <input placeholder=\"Description\" name=\"description\" className=\"form-control\" \r\n                                                value={this.state.description} onChange={this.changeDescriptionHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Author: </label>\r\n                                            <input placeholder=\"Author Name\" name=\"userId\" className=\"form-control\" \r\n                                                value={this.state.userId} onChange={this.changeUserHandler}/>\r\n                                        </div>\r\n\r\n                                        <button className=\"btn btn-success\" onClick={this.saveOrUpdateComment}>Save</button>\r\n                                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                   </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateCommentComponent\r\n"]},"metadata":{},"sourceType":"module"}